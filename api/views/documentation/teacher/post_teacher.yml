Adds a new teacher to a department
---
tags:
  - Teachers
summary: Endpoint to add a new teacher to a specific department of a school.
description: This endpoint adds a new teacher to a specific department of a
  school in the database, based on the provided department ID.
parameters:
  - name: department_id
    in: path
    description: ID of the department to add the teacher to
    required: true
    type: string
    example: "e8f5033e-6534-46fb-ab28-154abd27daea"
  - name: teacher
    in: body
    description: JSON object containing the details of the new teacher
    required: true
    schema:
      type: object
      required:
        - fname
        - lname
        - email
        - password
      properties:
        fname:
          type: string
          description: First name of the teacher
          example: "Fidelis"
          nullable: false
        lname:
          type: string
          description: Last name of the teacher
          example: "Ogunsanwo"
          nullable: false
        email:
          type: string
          description: Email address of the teacher
          example: "fidelisogunsanwo@tasued.edu.com.ng"
          nullable: false
        password:
          type: string
          description: Password for the teacher's account (hashed)
          nullable: false
        title:
          type: string
          description: Title of the teacher
          example: "Dr"
          nullable: true
responses:
  201:
    description: Teacher added successfully
    schema:
      type: object
      properties:
        id:
          type: string
          description: Teacher's ID
          example: "6ac6d4c9-1cd1-4fea-a792-8337713e2bf1"
        created_at:
          type: string
          format: date-time
          description: Date the teacher was created
          example: "2024-07-01T12:00:14.000000"
        updated_at:
          type: string
          format: date-time
          description: Date the teacher was last updated
          example: "2024-07-01T12:00:14.000000"
        __class__:
          type: string
          description: Class name of object
          example: "Teacher"
        department_id:
          type: string
          description: ID of the department teacher belongs to
          example: "e8f5033e-6534-46fb-ab28-154abd27daea"
        school_id:
          type: string
          description: ID of the school teacher belongs to
          example: "7b7fba28-e8a5-4647-823f-1b7dbf56b657"
        fname:
          type: string
          description: First name of teacher
          example: "Fidelis"
        lname:
          type: string
          description: Last name of teacher
          example: "Ogunsanwo"
        email:
          type: string
          description: Email address of teacher
          example: "fideolisogunsanwo@tasued.edu.com.ng"
        password:
          type: string
          description: Hashed password for the teacher's account
        title:
          type: string
          description: Title of the teacher
          example: "Professor"
  400:
    description: Bad request
    schema:
      type: object
      properties:
        error:
          type: string
          description: Error message
          examples:
            not_json:
              value: "Not a JSON"
            missing_param:
              value: "Missing fname"
            email_exists:
              value: "Email already exists"
  404:
    description: Department not found
    schema:
      type: object
      properties:
        error:
          type: string
          description: Error message
          example: "Not found"
  500:
    description: Internal server error
    schema:
      type: object
      properties:
        error:
          type: string
          description: Error message
          example: "Internal server error"
